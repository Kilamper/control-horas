---
import Layout from "@/layouts/Layout.astro"

import AlterHeader from "@/components/AlterHeader.astro"
import Footer from "@/components/Footer.astro"
import DeleteClass from "@/components/forms/DeleteClass.svelte"

const session = Astro.cookies.get("session")
const user = Astro.cookies.get("user")

if (!session || !user) {
	return Astro.redirect("/login")
}

const userData = {
	userId: user.value,
	sessionToken: session.value,
}

const data = await fetch("https://control-horas-api.onrender.com/user/checkSession", {
	method: "POST",
	headers: {
		"Content-Type": "application/json",
	},
	body: JSON.stringify(userData),
})
	.then((response) => response.json())
	.catch((error) => error as Error)

if (data.error) {
	Astro.cookies.delete("session")
	Astro.cookies.delete("user")
	return Astro.redirect("/login")
}

const { user_name: userName, email, role, is_verified: isVerified } = data.userData

const { classId } = Astro.params

const formData = new FormData()
formData.append("classId", classId)

const classData = await fetch("https://control-horas-api.onrender.com/class/getClass", {
	method: "POST",
	headers: {
		"Content-Type": "application/json",
	},
	body: JSON.stringify({ classId }),
})
	.then((response) => response.json())
	.catch((error) => error as Error)

if (classData.error) {
	return Astro.redirect("/dashboard")
}
---

<Layout
	title="GestionAppmos - La aplicación de gestión horaria para clases particulares"
	description="La nueva aplicación que va a revolucionar la forma de gestionarte los horarios para las clases particulares. Busca profesores, o date a conocer a nivel mundial."
>
	<AlterHeader userName={userName} />
	<section class="relative mx-auto my-8 mt-3 w-full max-w-screen-xl p-4">
		<div id="classId" class="my-8" data-class-id={classId}>
			<h2 class="mb-4 ml-5 text-base font-bold md:text-2xl lg:text-2xl">
				{classData.title}
			</h2>
			<hr class="mb-8 w-full border-b border-black" />
			<div class="mx-auto max-w-[1100px]">
				<p class="block text-lg font-medium text-gray-700">
					Fecha: <span class="text-black">{classData.date}</span>
				</p>
				<p class="block text-lg font-medium text-gray-700">
					Asignatura: <span class="text-black">{classData.subject}</span>
				</p>
				<p class="block text-lg font-medium text-gray-700">
					Hora de inicio: <span class="text-black">{classData.start_at}</span>
				</p>
				<p class="block text-lg font-medium text-gray-700">
					Hora de finalización: <span class="text-black">{classData.end_time}</span>
				</p>
				<p class="block text-lg font-medium text-gray-700">
					Descripción: <span class="text-black">{classData.description}</span>
				</p>
			</div>
		</div>
	</section>
	<div class="flex justify-end">
		<DeleteClass
			client:idle
			classId={classId}
			userId={userData.userId}
			sessionToken={userData.sessionToken}
		/>
		<a
			href="/dashboard"
			class="mx-auto flex w-56 justify-center rounded-full bg-orange-500 py-2 text-lg font-bold text-white hover:bg-primary"
			>Volver al dashboard</a
		>
	</div>
</Layout>
<Footer />
